substitutions:
  device_friendly_name: ""
  device_name: ""
  #device_ip: "0.0.0.0"

  # Project Substitutions (not intended for user substitution)
  device_model: "Switchman M5 (2-Gang)"
  device_make: "Sonoff"
  package_version: "0.0.1"
  package_url: "github://bitosome/esphome-sonoff/sonoff-m5-2-gang.yaml@main"

  # Relay Configurations
  relay_a_gpio: GPIO23
  relay_b_gpio: GPIO19

  # Button Configurations
  button_a_gpio: GPIO04
  button_b_gpio: GPIO15

  # Indicator LED
  led_indicator_gpio: GPIO22

# Allow importing this package
dashboard_import:
  package_import_url: ${package_url}
  import_full_config: false

# Import packages
packages:
  standard_package:
    url: https://github.com/bitosome/esphome-sonoff/
    ref: main
    refresh: 0d
    files:
      - standard/project.yaml
      - standard/diagnostics.yaml
      - standard/wifi.yaml
      - standard/internaltemp.yaml
  sonoffm5_package:
    url: https://github.com/bitosome/esphome-sonoff/
    ref: main
    refresh: 0d
    files:
      - sonoff-m5/board.yaml 
      - sonoff-m5/timings.yaml
      - sonoff-m5/status-led.yaml
      - sonoff-m5/backlight.yaml
      - sonoff-m5/indicator-led.yaml
      - sonoff-m5/mode-button-a.yaml
      - sonoff-m5/mode-button-b.yaml
      - sonoff-m5/relay-a.yaml
      - sonoff-m5/relay-b.yaml
      - sonoff-m5/button-a.yaml
      - sonoff-m5/button-b.yaml

switch:
  # Modify behavior of imported Relay B
  - id: !extend relay_b
    on_turn_on:
    - switch.turn_on: led_indicator
    on_turn_off:
    - switch.turn_off: led_indicator

binary_sensor:
  # Button A
  - id: !extend button_a
    on_press:
      # Latching
      - if:
          condition:
            - lambda: 'return id(mode_a).active_index() == 0;'
          then:
            - switch.toggle: relay_a
      # Momentary
      - if:
          condition:
            - lambda: 'return id(mode_a).active_index() == 1;'
          then:
            - switch.turn_on: relay_a
      # Pulse
      - if:
          condition:
            - lambda: 'return id(mode_a).active_index() == 2;'
          then:
            - switch.turn_on: relay_a
            - delay: ${timing_pulse}
            - switch.turn_off: relay_a
    on_release:
      # Momentary
      - if:
          condition:
            - lambda: 'return id(mode_a).active_index() == 1;'
          then:
            - switch.turn_off: relay_a

  # Button B
  - id: !extend button_b
    on_press:
      # Latching
      - if:
          condition:
            - lambda: 'return id(mode_b).active_index() == 0;'
          then:
            - switch.toggle: relay_b
      # Momentary
      - if:
          condition:
            - lambda: 'return id(mode_b).active_index() == 1;'
          then:
            - switch.turn_on: relay_b
      # Pulse
      - if:
          condition:
            - lambda: 'return id(mode_b).active_index() == 2;'
          then:
            - switch.turn_on: relay_b
            - delay: ${timing_pulse}
            - switch.turn_off: relay_b
      # Decoupled
      - if:
          condition:
            - lambda: 'return id(mode_b).active_index() == 3;'
          then:
            - switch.turn_on: led_indicator
            - homeassistant.sevice:
              service: service: input_boolean.toggle
              data:
                entity_id: input_boolean.${device_name}_right_state

    on_release:
      # Momentary
      - if:
          condition:
            - lambda: 'return id(mode_b).active_index() == 1;'
          then:
            - switch.turn_off: relay_b
      # # Decoupled
      # - if:
      #     condition:
      #       - lambda: 'return id(mode_b).active_index() == 3;'
      #     then:
      #       - switch.turn_off: led_indicator
